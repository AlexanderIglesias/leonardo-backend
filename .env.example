# Leonardo Backend - Environment Variables Configuration
# Copy this file to .env and set your actual values

# API Security Configuration
API_SECURITY_ENABLED=${API_SECURITY_ENABLED:true}
API_KEY=your_secure_api_key_here

# Database Configuration
DB_URL=jdbc:mysql://localhost:3306/leonardo_senasoft?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8&useUnicode=true
DB_USERNAME=leonardo_user
DB_PASSWORD=your_secure_database_password_here

# MySQL Root Password (for Docker only)
MYSQL_ROOT_PASSWORD=your_secure_root_password_here

# AWS Production Example (uncomment and modify for AWS deployment)
# DB_URL=jdbc:mysql://your-rds-endpoint.region.rds.amazonaws.com:3306/leonardo_senasoft?useSSL=true&requireSSL=true&serverTimezone=UTC&characterEncoding=UTF-8&useUnicode=true
# DB_USERNAME=leonardo_user
# DB_PASSWORD=your_production_password_here

# Development Notes:
# - Replace all "your_*_password_here" placeholders with actual secure passwords
# - For local development, generate strong passwords (32+ characters)
# - For Docker, use different passwords than development
# - For AWS production, use completely different secure passwords
# - Never commit the actual .env file with real passwords
# - Use password managers to generate and store secure passwords

# API Key Generation:
# Run: ./scripts/generate-api-key.sh
# This will generate cryptographically secure API keys for all environments

# Password Requirements:
# - Minimum 32 characters
# - Mix of uppercase, lowercase, numbers, and symbols
# - Avoid dictionary words
# - Example pattern: Pr0j3ct_Y34r_Env1r0nm3nt!Sp3c14l#Ch4rs

# API Key Requirements:
# - Generated using cryptographically secure methods
# - Different keys for each environment (dev, staging, prod)
# - Store in password manager
# - Rotate periodically (every 90 days recommended)
